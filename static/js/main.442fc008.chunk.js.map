{"version":3,"sources":["assets/images/logo.png","components/Navbar.js","components/Footer/Footer.js","components/ImageAnWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","react_router_dom","to","Footer","href","ImageAndWelcome","src","Logo","alt","CityCard","props","city","country_flag_url","name","country_name","concat","id","_renderCityList","cities","length","map","components_CityCard","key","CityList","Fragment","title","showSubtitle","subtitle","SearchCity","style","marginBottom","type","placeholder","value","onChange","onClick","onClickSearch","API","zomato","baseUrl","api_key","process","citiesDummy","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeKeywordHandler","event","setState","keyword","target","getFeaturedCities","url","axios","get","headers","user-key","params","city_ids","then","_ref","data","status","featuredCities","location_suggestions","catch","err","console","log","searchHandler","state","q","_ref2","citiesResultSearch","cityKeywordSearch","ImageAnWelcome","marginTop","components_CityList","components_SearchCity","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","width","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","components_RatingLabel","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","getCityData","city_id","newCriteria","toConsumableArray","push","getCategoriesData","transformCategoriesData","filter","addToCriteriaHandler","splice","restaurants","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entity_id","entity_type","return","_ref3","renderRestaurantList","_ref4","components_RestaurantCard","match","_this2","components_CategoryList","components_SearchKeyword","components_SearchCriteria","RestaurantProfile","featured_image","votes","Review","border","class","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","components_RestaurantProfile","components_Review","App","components_Navbar","react_router","path","exact","component","components_Footer_Footer","Boolean","window","hostname","require","config","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.442fc008.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7e422680.png\";","import React from 'react';\nimport '../assets/scss/Navbar.scss';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\n    <div className='container'>\n      <div className='row'>\n        <div className='col'>\n          <Link className=\"navbar-brand\" to=\"/\">food<span>paradise</span></Link>\n        </div>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Navbar","import React from 'react'\nimport './Footer.css';\n\n\nconst Footer = () => (\n  <footer className=\"my-footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-4 text-center\">\n          <h5>About FoodParadise</h5>\n          <ul>\n            <li><a href=\"/#\">About Us</a></li>\n            <li><a href=\"/#\">Contact Us</a></li>\n          </ul>\n        </div>\n        <div className=\"col-sm-4 text-center\">\n          <h5>Support</h5>\n          <ul>\n            <li><a href=\"/#\">FAQ</a></li>\n            <li><a href=\"/#\">Help desk</a></li>\n            <li><a href=\"/#\">Forums</a></li>\n          </ul>\n        </div>\n        <div className=\"col-sm-4 text-center\">\n          <h5>Download App</h5>\n          <ul>\n            <li><a href=\"/#\">Google Play</a></li>\n            <li><a href=\"/#\">App Store</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div className=\"social-networks\">\n      <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\n      <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\n      <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\n    </div>\n    <div className=\"text-center footer-copyright\">\n      <p>Copyright &copy; 2019 FoodParadise </p>\n    </div>\n  </footer>\n)\n\nexport default Footer","import React from 'react'\nimport Logo from \"../assets/images/logo.png\";\nimport '../assets/scss/ImageAndWelcome.scss';\n\n\nconst ImageAndWelcome = () => (\n    <div className='main-banner'>\n        <div className='banner-masking'>\n            <div className='valign-banner'>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col'>\n                            <img className='brand' src={Logo} alt='logo'></img>\n                            <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\n                            <p>You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default ImageAndWelcome;","import React from 'react';\nimport '../assets/scss/CityCard.scss';\nimport { Link } from 'react-router-dom';\n\nconst CityCard = (props) => (\n    <div className=\"col-md-4\">\n        <div className=\"card mb-3 CityCard\">\n            <div className='card-header'>\n                <h5 className=\"card-title mb-0\">\n                    <span><img src={props.city.country_flag_url} alt='flag'/></span>\n                    {props.city.name}\n                </h5>\n            </div>\n            <div className=\"card-body\">\n                <p>{props.city.country_name}</p>\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\n            </div>\n        </div>\n    </div>\n)\n\nexport default CityCard","import React from 'react'\nimport CityCard from './CityCard'\n\nconst CityList = (props) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h3>{props.title}</h3>\n        { props.showSubtitle === true && props.subtitle !== '' && \n          <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}' </h6>\n        }\n      </div>\n    </div>\n    <div className=\"row\">\n\n      { props.cities == null ? (\n        <div className=\"col\">\n          <p>Loading . . . </p>\n        </div>\n      ) : (\n        _renderCityList(props.cities)\n      )}\n\n    </div>\n  </>\n)\n\nconst _renderCityList = (cities) => {\n  if(cities.length > 0) {\n    return (\n      cities.map(city =>\n        <CityCard key={city.id} city={city} />\n      )\n    )\n  } else {\n    return (\n      <div className=\"col\">\n        <p className=\"text-danger\">Data not found !</p>\n      </div>\n    )\n  }\n}\n\nexport default CityList","import React from 'react'\n\nconst SearchCity = (props) => (\n  <div className=\"row\" style={{ marginBottom: 30 }}>\n    <div className=\"col\">\n      <h3>Search City</h3>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"form-row\">\n            <div className=\"col-md-10\">\n              <input\n                  className=\"form-control mb-2\"\n                  type=\"text\"\n                  placeholder=\"Type keyword or city name\"\n                  value={props.value}\n                  onChange={props.onChange}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                type=\"button\"\n                onClick={props.onClickSearch}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default SearchCity","export const API = {\n  zomato: {\n    baseUrl: 'https://developers.zomato.com/api/v2.1',\n    api_key: process.env.REACT_APP_API_KEY_ZOMATO\n  }\n}\n","import React, { Component } from 'react'\nimport ImageAndWelcome from '../components/ImageAnWelcome'\nimport CityList from '../components/CityList'\nimport SearchCity from '../components/SearchCity'\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nconst citiesDummy = [\n  { id: 74, name: 'Jakarta', country_name: 'Indonesia', country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_94.png' },\n  { id: 11052, name: 'Bandung', country_name: 'Indonesia', country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_94.png' },\n  { id: 170, name: 'Bali', country_name: 'Indonesia',country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_94.png' },\n  { id: 280, name: 'New York City', country_name: 'United States',country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_216.png' },\n  { id: 296, name: 'Perth', country_name: 'Australia',country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_14.png' },\n  { id: 1, name: 'Delhi NCR', country_name: 'India',country_flag_url: 'https://b.zmtcdn.com/images/countries/flags/country_1.png' },\n]\nclass Home extends Component {\n  constructor() {\n    super()\n    this.state = {\n      featuredCities: citiesDummy,\n      citiesResultSearch: null,\n      keyword: '',\n      cityKeywordSearch: ''\n    }\n  }\n\n  componentDidMount() {\n    // this.getFeaturedCities()\n  }\n\n  changeKeywordHandler = (event) => {\n    this.setState({ keyword: event.target.value });\n  }\n\n  getFeaturedCities = () => {\n    var url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        city_ids: '74,11052,170'\n      }\n    })\n      .then(({ data }) => {\n        if (data.status === 'success') {\n          this.setState({ featuredCities: data.location_suggestions })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  searchHandler = () => {\n    let keyword = this.state.keyword\n    var url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        q: keyword\n      }\n    })\n      .then(({ data }) => {\n        if (data.status === 'success') {\n          this.setState({ \n            citiesResultSearch: data.location_suggestions, \n            keyword: '',\n            cityKeywordSearch: keyword\n          })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <>\n      <ImageAndWelcome />\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n        <CityList title={'Featured Cities'} cities={this.state.featuredCities} />\n\n        <SearchCity\n          value={this.state.keyword}\n          onChange={this.changeKeywordHandler}\n          onClickSearch={this.searchHandler}\n        />\n\n        {\n          this.state.cityKeywordSearch !== '' && (\n            <CityList\n              title={'Search Result'}\n              showSubtitle={true}\n              subtitle={this.state.cityKeywordSearch}\n              cities={this.state.citiesResultSearch}\n            />  \n          )\n        }  \n\n      </div>\n      </>\n    )\n  }\n}\n\nexport default Home","import React from 'react'\n\nconst CategoryList = (props) => (\n    props.categories ? (\n      <div className=\"list-group mb-3\">\n        {props.categories.map(category => (\n          <button\n            key={category.id}\n            className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\n            onClick={() => props.categoryClickHandler(category)}\n          >\n            {category.name}\n          </button>\n        ))}\n      </div>\n    ) : (\n      <p>Loading...</p>\n    )\n)\n\nexport default CategoryList","import React from 'react'\n\nconst SearchKeyword = (props) => (\n  <>\n  <h5>Keyword</h5>\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <div className=\"form-row\">\n        <div className=\"col-md-9\">\n          <input\n            className=\"form-control mb-2\"\n            type=\"text\"\n            placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\n            value={props.keyword}\n            onChange={props.changeKeywordHandler}\n          />\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"btn btn-primary btn-block\"\n            type=\"button\"\n            onClick={props.onClickAddToCriteria}\n          >\n            Add to criteria\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  </>\n)\n\nexport default SearchKeyword","import React from 'react'\n\nconst SearchCriteria = (props) => (\n  <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\n    <div className=\"card-body\">\n      <p className=\"card-title\">Find Restaurants based on criteria : </p>\n      <table className=\"table table-hover\">\n        <tbody>\n          {props.criteria.map((cri, index) => (\n            <tr key={index} className=\"table-active\">\n              <td width=\"40%\">{cri.criteriaName}</td>\n              <td width=\"50%\">{cri.data.name}</td>\n              <td>\n                {cri.criteriaName !== 'City' && (\n                  <i\n                    className=\"fa fa-times\"\n                    aria-hidden=\"true\"\n                    style={{ color: 'red' }}\n                    onClick={() => props.removeCriteriaHandler(index)}\n                  >\n                  </i>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pull-right\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={props.onClickSearch}\n        >\n          Search\n        </button>\n      </div>\n\n    </div>\n  </div>\n)\n\nexport default SearchCriteria","import React from 'react'\n\nconst RatingLabel = (props) => (\n  <div className=\"btn btn-sm\"\n    style={{\n      color: 'white',\n      backgroundColor: `#${props.labelColor}`,\n      borderColor: `#${props.labelColor}`,\n    }}\n  >\n    {props.text}\n  </div>\n)\n\nexport default RatingLabel","import React from 'react'\nimport { Link } from 'react-router-dom' \nimport RatingLabel from './RatingLabel'\n\nconst RestaurantCard = (props) => (\n  <div className=\"col-md-6\" style={{ marginBottom: 20 }}>\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\n          </div>\n          <div className=\"col-md-8\">\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n            <h6>{props.restaurant.location.locality}</h6>\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-body\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td>Rating</td>\n              <td>\n                <RatingLabel   \n                  labelColor={props.restaurant.user_rating.rating_color}\n                  text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Cuisines</td>\n              <td>\n                {props.restaurant.cuisines}\n              </td>\n            </tr>\n            <tr>\n              <td>Cost for two</td>\n              <td>\n                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n      <div className=\"card-footer\">\n        <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\n          <button type=\"button\" className=\"btn btn-outline-success btn-block\">\n            View Restaurant Details\n          </button>\n        </Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default RestaurantCard\n","import React, { Component } from 'react'\n\nimport axios from 'axios'\nimport { API } from '../config/api'\nimport CategoryList from '../components/CategoryList'\nimport SearchKeyword from '../components/SearchKeyword'\nimport SearchCriteria from '../components/SearchCriteria'\nimport RestaurantCard from '../components/RestaurantCard'\n\nclass City extends Component {\n  constructor() {\n    super()\n    this.state = {\n      city: null,\n      categories: null,\n      categorySelected: null,\n      keyword: '',\n      criteria: [],\n      restaurants: []\n    }\n  }\n  \n  componentDidMount() {\n    // cara mendapatkan parameter city_id dari url / route\n    let { city_id } = this.props.match.params\n    this.getCityData(city_id)\n\n    this.getCategoriesData()\n  }\n\n  getCityData = (city_id) => {\n    let url = `${API.zomato.baseUrl}/cities`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        city_ids: `${city_id}`\n      }\n    })\n      .then(({ data }) => {\n        let city = data.location_suggestions[0]\n        let newCriteria = {\n          criteriaName: 'City',\n          data: city\n        }\n        let criteria = [...this.state.criteria]\n        criteria.push(newCriteria)\n        this.setState({ city, criteria })\n      })\n      .catch(err => console.log(err))\n  }\n\n  getCategoriesData = () => {\n    let url = `${API.zomato.baseUrl}/categories`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      }\n    })\n      .then(({ data }) => {\n        // proses transform data categories\n        let categories = this.transformCategoriesData(data.categories)\n        this.setState({ categories })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  transformCategoriesData(categories) {\n    let categoriesTransformed = categories.map(category => {\n      return category.categories\n    })\n\n    return categoriesTransformed\n  }\n\n  categoryClickHandler = (category) => {\n    let criteria = [...this.state.criteria]\n    // ambil element array selain element dengan criteriaName 'Category' \n    criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\n    let newCriteria = {\n      criteriaName: 'Category',\n      data: category\n    }\n    criteria.push(newCriteria)\n    this.setState({ categorySelected: category, criteria })\n  }\n\n  changeKeywordHandler = (event) => {\n    this.setState({ keyword: event.target.value });\n  }\n\n  addToCriteriaHandler = () => {\n    let criteria = [...this.state.criteria]\n    criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\n    let newCriteria = {\n      criteriaName: 'Keyword',\n      data: {\n        name: this.state.keyword\n      }\n    }\n\n    criteria.push(newCriteria)\n    this.setState({ keyword: '', criteria })\n  }\n\n  removeCriteriaHandler = (index) => {\n    let criteria = [...this.state.criteria]\n    criteria.splice(index, 1)\n    this.setState({ criteria })\n  }\n\n  searchHandler = () => {\n    this.setState({restaurants: null})\n    let url = `${API.zomato.baseUrl}/search`\n    let params = {}\n\n    for (let cri of this.state.criteria) {\n\n      switch (cri.criteriaName) {\n        case 'City':\n          params.entity_id = cri.data.id\n          params.entity_type = 'city'\n          break\n        case 'Category':\n          params.category = cri.data.id\n          break\n        case 'Keyword':\n          params.q = cri.data.name\n          break\n        default: break\n      }\n    }\n\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params\n    })\n      .then(({ data }) => {\n        this.setState({ restaurants: data.restaurants })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  renderRestaurantList = () => {\n    if(this.state.restaurants == null) {\n      return (\n        <div className=\"col\">\n          <p>Loading...</p> \n        </div>\n      )\n    }\n\n    if(this.state.restaurants.length > 0) {\n      return (\n        this.state.restaurants.map(({ restaurant }) => (\n          <RestaurantCard key={restaurant.id} restaurant={restaurant} />\n        ))\n      )\n    } else {\n      return (\n        <div className=\"col\">\n          <p>No Data available. Please select criteria, and click Search</p>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n        { this.state.city && (\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4 className=\"text-success\">\n                Restaurant in { this.state.city.name }, { this.state.city.country_name }\n              </h4>\n            </div>\n          </div>\n        )}\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <h5>Categories</h5>\n            <CategoryList \n              categories={this.state.categories}\n              categorySelected={this.state.categorySelected}\n              categoryClickHandler={(category) => this.categoryClickHandler(category)}\n            />\n          </div>\n\n          <div className=\"col\">\n            <SearchKeyword\n              keyword={this.state.keyword}\n              changeKeywordHandler={this.changeKeywordHandler}\n              onClickAddToCriteria={this.addToCriteriaHandler}\n            />\n            <SearchCriteria \n              criteria={this.state.criteria}\n              removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\n              onClickSearch={this.searchHandler}\n            />\n\n            <div className=\"row\">\n              <div className=\"col\" style={{ marginBottom: 10 }}>\n                <h4 className=\"text-success\">Restaurant List</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              { this.renderRestaurantList() }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default City","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst RestaurantProfile = (props) => (\n  <div className=\"card\">\n    <div className=\"card-header\">\n      <div className=\"row\">\n        <div className=\"col\">\n\n          {\n            props.restaurant ? (\n              <>\n                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\n                <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n              </>\n            ) : (\n                <p>Loading...</p>\n              )\n          }\n\n        </div>\n      </div>\n    </div>\n    <div className=\"card-body\">\n      {\n        props.restaurant ? (\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <img className=\"img-fluid\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\n            </div>\n            <div className=\"col-md-6\">\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <td>Rating</td>\n                    <td>\n                      <RatingLabel\n                        labelColor={props.restaurant.user_rating.rating_color}\n                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                      />\n                      <h6>{props.restaurant.user_rating.votes} Votes</h6>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cuisines</td>\n                    <td>\n                      {props.restaurant.cuisines}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cost for two</td>\n                    <td>\n                      {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        ) : (\n            <p>Loading...</p>\n          )\n      }\n\n\n    </div>\n  </div>\n)\n\nexport default RestaurantProfile","import React from 'react'\nimport RatingLabel from './RatingLabel'\n\nconst Review = (props) => (\n  <div className=\"card border-success\" style={{ marginBottom: 5 }}>\n    <div className=\"card-body\">\n      <div className=\"row\" style={{ marginBottom: 20 }}>\n        <div className=\"col-1\" style={{ border: '0px solid black' }}>\n          <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\n        </div>\n        <div className=\"col-11\" style={{ border: '0px solid black' }}>\n          <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\n          <RatingLabel\n            text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\n            labelColor={`${props.review.user.foodie_color}`}\n          />\n        </div>\n      </div>\n      <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\n      <RatingLabel\n        text={`${props.review.rating} (${props.review.rating_text})`}\n        labelColor={`${props.review.rating_color}`}\n      />\n      <p className=\"card-text\">{props.review.review_text}</p>\n    </div>\n  </div>\n)\n\nexport default Review","import React, { Component } from 'react'\nimport RestaurantProfile from '../components/RestaurantProfile'\nimport Review from '../components/Review'\n\nimport axios from 'axios'\nimport { API } from '../config/api'\n\nclass RestaurantDetail extends Component {\n  constructor () {\n    super()\n    this.state = {\n      restaurant: null,\n      reviews: null\n    }\n  }\n\n  componentDidMount () {\n    let { params } = this.props.match\n    this.getRestaurantData(params.restaurant_id)\n    this.getReviewsData(params.restaurant_id)\n  }\n\n  getRestaurantData = (restaurant_id) => {\n    let url = `${API.zomato.baseUrl}/restaurant`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        res_id: restaurant_id\n      }\n    })\n      .then(({ data }) => {\n        this.setState({ restaurant: data })\n      })\n      .catch(err => console.log(err))\n  }\n\n  getReviewsData = (restaurant_id) => {\n    let url = `${API.zomato.baseUrl}/reviews`\n    axios.get(url, {\n      headers: {\n        'user-key': API.zomato.api_key\n      },\n      params: {\n        res_id: restaurant_id\n      }\n    })\n      .then(({ data }) => {\n        this.setState({ reviews: data.user_reviews })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\n        <div className=\"row\">\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\n            <RestaurantProfile restaurant={this.state.restaurant}/>\n          </div>\n\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\n\n                {this.state.reviews ? (\n                  this.state.reviews.map(({ review }) => (\n                    <Review key={review.id} review={review} />\n                  ))\n                ) : (\n                  <p>Loading...</p>\n                )}\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RestaurantDetail","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer/Footer'\nimport Home from './pages/Home'\nimport City from './pages/City'\nimport RestaurantDetail from './pages/RestaurantDetail'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/foodparadise\" exact component={Home}></Route>\n        <Route path=\"/foodparadise/city/:city_id\" component={City}></Route>\n        <Route path=\"/foodparadise/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nrequire('dotenv').config();"],"sourceRoot":""}